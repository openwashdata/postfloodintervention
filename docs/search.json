[{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"CLAUDE.md - OpenWashData R Package Review Guide","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"guide helps Claude Code review R data packages openwashdata organization, ensuring consistency, quality, completeness across published datasets.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"review process follows PLAN → CREATE → TEST → DEPLOY workflow. entire review process starts package dev branch, issues resolved final PR dev main created. phase requires explicit user approval proceeding. CRITICAL WORKFLOW RULE: Claude MUST stop completing individual issue. user must manually restart Claude next issue.","code":""},{"path":[]},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"id_1-plan-phase","dir":"","previous_headings":"Review Workflow","what":"1. PLAN Phase","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"initiated via /review-package [package-name], Claude : Analyze Package Structure Verify package created washr template Check required directories: R/, data/, data-raw/, inst/extdata/, man/ Confirm presence key files: DESCRIPTION, README.Rmd, _pkgdown.yml Create Review Issues (5 GitHub issues checklists) Issue 1: General Information & Metadata (checklist) Issue 2: Data Content & Quality (checklist) Issue 3: Data Processing Script Review (checklist) Issue 4: Documentation (checklist) Issue 5: Tests & CI/CD (checklist) issue must created checklist Claude update items completed. Present Review Plan Summary findings List issues addressed Request user confirmation proceeding","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"id_2-create-phase","dir":"","previous_headings":"Review Workflow","what":"2. CREATE Phase","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"user approval, work issues ONE TIME. WORKFLOW ISSUE: 1. User runs /review-issue [number] start work specific issue 2. Claude creates new branch dev issue 3. Claude implements changes issue 4. Claude commits changes descriptive message 5. Claude creates PR dev branch (main!) 6. CLAUDE MUST STOP COMPLETELY - proceed next issue 7. User reviews PR, merges dev 8. User manually restarts Claude /review-issue [next-number] next issue CRITICAL: Claude MUST automatically continue next issue. workflow STOPS creating PR.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"issue-1-general-information--metadata","dir":"","previous_headings":"Review Workflow > 2. CREATE Phase","what":"Issue 1: General Information & Metadata","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Claude must check items completed update issue Title (descriptive, <65 characters) Description (clear purpose statement) Authors ORCID IDs License: CC 4.0 Dependencies properly declared Version follows semantic versioning CITATION.cff file present valid Generate citation using washr::update_citation()","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"issue-2-data-content--quality","dir":"","previous_headings":"Review Workflow > 2. CREATE Phase","what":"Issue 2: Data Content & Quality","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Data files data/ directory (.rda format) CSV/XLSX exports inst/extdata/ Main dataset accessible via function matching package name unexpected missing values Consistent data types Reasonable value ranges Proper encoding (UTF-8)","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"issue-3-data-processing-script-review","dir":"","previous_headings":"Review Workflow > 2. CREATE Phase","what":"Issue 3: Data Processing Script Review","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"data_processing.R data-raw/ Script reproducible well-commented Raw data files preserved data-raw/ dictionary.csv variable descriptions Uses tidyverse conventions Handles data cleaning transparently Analysis testing scripts preserved analysis/ directory","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"issue-4-documentation","dir":"","previous_headings":"Review Workflow > 2. CREATE Phase","what":"Issue 4: Documentation","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Dynamic content generation Installation instructions Data overview dimensions Variable dictionary table License citation sections Roxygen documentation exported functions _pkgdown.yml configured standard openwashdata template Package website builds without errors","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"issue-5-tests--cicd","dir":"","previous_headings":"Review Workflow > 2. CREATE Phase","what":"Issue 5: Tests & CI/CD","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"GitHub Actions workflow R-CMD-check Package passes devtools::check() errors/warnings Examples run successfully Data loads correctly MANDATORY PROCESS ISSUE: 1. Present planned changes request user confirmation implementing 2. Create feature branch dev (e.g., issue-1-metadata) 3. Implement changes regular check-ins: - checklist item major change: - Announce specific change - Implement - Show result - CHECK-: “Ready commit change? (commit/continue)” - “commit”: Create atomic commit change 4. Run tests changes 5. Update GitHub issue check completed items: - Use gh issue view [number] get current issue body - Update checkboxes - [ ] - [x] completed items - Use gh issue edit [number] --body \"[updated body]\" save 6. Create PR detailed summary including commits: ``` gh pr create –base dev –title “Fix Issue #1: [Description]” –body “## Summary Addresses Issue #[number] ## Changes Made - [Specific changes] ## Completed Checklist Items - [x] Item 1 - [x] Item 2 Closes #[number]” ``7. **STOP IMMEDIATELY** - Output: \"✅ PR created Issue #1. Issue checklist updated. Please review merge, run/review-issue 2` continue.” 8. PROCEED issue","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"id_3-test-phase","dir":"","previous_headings":"Review Workflow","what":"3. TEST Phase","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Run comprehensive package checks: Verify: - tests pass - R CMD check issues - Documentation renders correctly - Website builds successfully","code":"devtools::check() devtools::build() pkgdown::build_site()"},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"id_4-deploy-phase","dir":"","previous_headings":"Review Workflow","what":"4. DEPLOY Phase","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Build deploy pkgdown website Verify Plausible analytics tracking Confirm changes committed Approve PR merge main branch Create release using /create-release command","code":""},{"path":[]},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"required-files-structure","dir":"","previous_headings":"Key Standards","what":"Required Files Structure","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"","code":"package-name/ ├── DESCRIPTION ├── NAMESPACE ├── R/ │   └── package-name.R ├── data/ │   └── package-name.rda ├── data-raw/ │   ├── data_processing.R │   └── dictionary.csv ├── inst/ │   ├── CITATION │   └── extdata/ │       ├── package-name.csv │       └── package-name.xlsx ├── man/ ├── vignettes/                # Optional vignettes directory │   └── articles/             # Always use articles/ subdirectory │       └── example.Rmd       # Keep all vignettes here ├── analysis/                 # Analysis and testing scripts (not built) │   ├── test_package.R │   ├── data_analysis.R │   └── validation.R ├── README.Rmd ├── README.md ├── NEWS.md                   # Package changelog ├── CITATION.cff ├── _pkgdown.yml              # Standard openwashdata configuration ├── .Rbuildignore └── .github/     └── workflows/         └── R-CMD-check.yaml"},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"vignettes-convention","dir":"","previous_headings":"Key Standards","what":"Vignettes Convention","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"IMPORTANT: vignettes must stored vignettes/articles/ subdirectory, directly vignettes/. convention: - Ensures vignettes rendered correctly pkgdown - Keeps vignettes separate package documentation - Prevents CRAN submission issues - Maintains consistency across openwashdata packages Example structure:","code":"vignettes/ └── articles/     ├── getting-started.Rmd     ├── data-analysis.Rmd     └── case-study.Rmd"},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"r-scripts-for-reproducibility","dir":"","previous_headings":"Key Standards","what":"R Scripts for Reproducibility","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"R scripts used testing, validation, analysis package development must preserved repository reproducibility purposes. scripts stored analysis/ directory package root level.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"why-analysis-directory","dir":"","previous_headings":"Key Standards > R Scripts for Reproducibility","what":"Why analysis/ directory:","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"included installed package (automatically ignored R CMD build) Available GitHub future reference reproducibility Organized separately package code configuration needed - R automatically excludes top-level directories recognized package components","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"script-organization-in-analysis","dir":"","previous_headings":"Key Standards > R Scripts for Reproducibility","what":"Script Organization in analysis/:","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"test_package.R - Scripts testing package functionality data_analysis.R - Exploratory data analysis scripts validation.R - Data validation quality checks comparison.R - Scripts comparing different data versions analysis utility scripts used development approach ensures analysis work remains transparent reproducible without affecting package installation CRAN compliance.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"package-dependencies","dir":"","previous_headings":"Key Standards","what":"Package Dependencies","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Common dependencies data packages: - dplyr, tidyr (data manipulation) - readr, readxl (data import) - janitor (data cleaning) - desc (DESCRIPTION parsing) - gt, kableExtra (table formatting) - usethis (development workflows, including NEWS.md versioning)","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"quality-criteria","dir":"","previous_headings":"Key Standards","what":"Quality Criteria","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Reproducibility: data processing steps documented runnable Transparency: Raw data preserved clear transformation pipeline Accessibility: Multiple export formats (R, CSV, XLSX) Documentation: Comprehensive variable descriptions usage examples Consistency: Follows openwashdata naming structure conventions","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"branch-and-pr-strategy","dir":"","previous_headings":"","what":"Branch and PR Strategy","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Package Review Branch Structure: - main - Production branch (protected) - dev - Development branch review work happens - issue-[n]-description - Feature branches issue (created dev) PR Flow: 1. issue gets PR feature branch → dev 2. User reviews merges issue PR dev 3. issues resolved, create final PR dev → main 4. Never create PRs directly main review process","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"commands","dir":"","previous_headings":"","what":"Commands","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"/review-package [package-name] - Start package review (analyzes package creates issues) /review-status - Check current review progress /review-issue [number] - Work specific issue (STOPS creating PR) /review-complete - issues merged dev, create final PR main /create-release [version] - Create new release changelog","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"issue-resolution-workflow","dir":"","previous_headings":"","what":"Issue Resolution Workflow","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"working issue via /review-issue [number]: Branch - Create feature branch dev: git checkout -b issue-[number]-description Analyze - Review specific issue requirements checklist items Present analysis needs done CHECK-#1: “’s found. proceed changes? (yes/)” Implement Changes Stages Announce ’re Make change Show result CHECK-: “Change completed. Ready commit? Type ‘commit’ save change, ‘continue’ make changes.” user says “commit”: Run git add -&& git commit -m \"Description specific change\" Repeat significant change Test - changes, verify everything works Run relevant tests (devtools::check(), build_readme(), etc.) CHECK-: “tests passed. Ready finalize? (yes/)” Update Issue - Check completed items issue checklist Use gh issue view [number] get current issue body Update checkboxes - [ ] - [x] completed items Use gh issue edit [number] --body \"[updated body]\" save CHECK-: “Issue checklist updated. Ready create PR? (yes/)” Final Commit (uncommitted changes) git add -&& git commit -m \"Final updates Issue #[number]\" Push - Push branch: git push -u origin issue-[number]-description Create PR - ALWAYS dev detailed body: STOP COMPLETELY - Output final message cease activity CRITICAL STOPPING BEHAVIOR: - creating PR, Claude MUST output: “✅ PR created Issue #[number]. Please review merge dev, run /review-issue [next-number] continue next issue.” - Claude MUST continue tasks - Claude MUST suggest next steps - Claude MUST start working next issue - conversation effectively ends user explicitly restarts /review-issue [next-number]","code":"gh pr create --base dev --title \"Fix Issue #[number]: [description]\" --body \"## Summary Addresses Issue #[number]  ## Changes Made - [List specific changes made] - [Include which checklist items were completed]  ## Commits in this PR - [List each commit message]  ## Checklist - [x] Item 1 completed - [x] Item 2 completed - [ ] Item 3 (if not completed, explain why)  Closes #[number]\""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"check-in-points-and-commit-strategy","dir":"","previous_headings":"","what":"Check-In Points and Commit Strategy","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Claude MUST pause check-points: analyzing issue requirements making changes Ask: “’s plan : [list]. proceed? (yes/)” significant change (e.g., checklist item) Show changed Ask: “Ready commit change? (commit/continue)” “commit”: Create atomic commit descriptive message running tests Show test results Ask: “tests passed. Ready finalize? (yes/)” updating issue checkboxes creating PR Ask: “Issue updated. Ready create PR? (yes/)” Commit Guidelines: - commit atomic (one logical change) - Use descriptive commit messages - Multiple small commits preferred one large commit - Example messages: - “Update DESCRIPTION title description” - “Add ORCID IDs authors” - “Configure CC 4.0 license” - “Update CITATION washr::update_citation()”","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"example-issue-by-issue-workflow","dir":"","previous_headings":"","what":"Example Issue-by-Issue Workflow","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"","code":"User: /review-issue 1 Claude: [Creates branch issue-1-metadata]         \"I'll work on Issue #1: General Information & Metadata. Here's what needs to be done:         - Update DESCRIPTION file         - Fix CITATION.cff         - Generate citation with washr          Should I proceed? (yes/no)\"  User: yes Claude: \"Starting with DESCRIPTION file updates...\"         [Shows DESCRIPTION changes]         \"✅ DESCRIPTION updated. Ready to commit? (commit/continue)\"  User: commit Claude: [Commits: \"Update DESCRIPTION file metadata\"]         \"Now working on CITATION.cff...\"         [Shows CITATION.cff changes]         \"✅ CITATION.cff created. Ready to commit? (commit/continue)\"  User: commit Claude: [Commits: \"Add CITATION.cff file\"]         \"Running washr::update_citation()...\"         [Shows result]         \"✅ Citation updated. Ready to commit? (commit/continue)\"  User: commit Claude: [Commits: \"Update CITATION with washr\"]         [Updates Issue #1 checkboxes]         [Creates PR with 3 commits listed]         \"✅ PR created for Issue #1 with 3 commits. Issue checklist updated. Please review and merge to dev, then run `/review-issue 2` to continue.\"         [STOPS COMPLETELY]  [Repeat for all 5 issues]  User: /review-complete Claude: [Creates final PR from dev to main]         \"✅ All issues resolved. Final PR created from dev to main for package review completion.\"  [After PR merged to main]  User: /create-release 0.1.0 Claude: [Updates version, creates NEWS.md entry, tags release]         \"✅ Release v0.1.0 created with changelog. Package published!\""},{"path":[]},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"creating-a-release-with-create-release-version","dir":"","previous_headings":"Release Management","what":"Creating a Release with /create-release [version]","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"creating release, Claude : PAUSE: Ask user “proceeding, please ensure repository enabled/synced Zenodo. Zenodo integration enabled repo? (yes/)” : Direct user enable https://zenodo.org/account/settings/github/ Use usethis::use_version() bump version DESCRIPTION Follow semantic versioning (major.minor.patch) Update version field match new version Update date-released current date Run washr::update_citation() sync citation files Verify version consistency across DESCRIPTION, CITATION, CITATION.cff Use usethis::use_news_md() NEWS.md doesn’t exist Add new version section release date Include summary changes recent commits/PRs Format following tidyverse NEWS conventions: Commit message: “Release version [version]” Include updates DESCRIPTION, CITATION.cff, NEWS.md Push main branch Use gh release create v[version] Include NEWS.md content release notes Tag release commit Zenodo automatically generates DOI step PAUSE: Ask user “GitHub release created! Please check Zenodo generated DOI provide (format: 10.5281/zenodo.XXXXXXX):” Add Zenodo badge README.Rmd: [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.XXXXXXX.svg)](https://doi.org/10.5281/zenodo.XXXXXXX) Run washr::update_citation(doi = \"10.5281/zenodo.XXXXXXX\") provided DOI Update citation files include DOI Commit message: “Add Zenodo DOI package” Push DOI updates main Rebuild site include new version DOI badge Deploy updated documentation","code":"# packagename 0.1.0  * Initial release to GitHub * Added core functionality for X (#1) * Fixed issue with Y (#2) * Enhanced documentation (#3)"},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"newsmd-format-guidelines","dir":"","previous_headings":"Release Management","what":"NEWS.md Format Guidelines","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"version gets section version number date Use bullet points changes Reference issue/PR numbers parentheses Group changes type (new features, bug fixes, etc.) recent version top Follow tidyverse style guide NEWS files Example NEWS.md structure:","code":"# washrkenya 0.2.0 (2024-01-15)  ## New features * Added support for temporal analysis (#12) * New vignette on data visualization (#15)  ## Bug fixes * Fixed encoding issues in region names (#10) * Corrected data type for population column (#11)  # washrkenya 0.1.0 (2023-12-01)  * Initial release * Basic data access functions * Documentation and examples"},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"important-notes","dir":"","previous_headings":"","what":"Important Notes","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Always request user confirmation phases Check user implementing changes CREATE phase Preserve existing git history commits Follow tidyverse style guide R code Use semantic versioning package versions","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"project-management-with-github-cli","dir":"","previous_headings":"","what":"Project Management with GitHub CLI","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"List issues: gh issue list View issue details: gh issue view 80 (e.g., issue #80 “Rename geographies parameter”) Create branch issue: gh issue develop 80 Checkout branch: git checkout 80-rename-geographies-parameter--entities Create pull request: gh pr create --title \"Rename geographies parameter entities\" --body \"Implements #80\" List pull requests: gh pr list View pull request: gh pr view PR_NUMBER","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"buildtestcheck-commands","dir":"","previous_headings":"","what":"Build/Test/Check Commands","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Build package: R CMD build . Install package: R CMD INSTALL . Run tests: R -e \"devtools::test()\" Run single test: R -e \"devtools::test_file('tests/testthat/test-FILE_NAME.R', reporter = 'progress')\" Run R CMD check: R -e \"devtools::check()\" Build Roxygen2 documentation: R -e \"devtools::document()\" Build vignettes: R -e \"devtools::build_vignettes()\" Build README.md README.Rmd: R -e \"devtools::build_readme()\"","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"standard-_pkgdownyml-configuration","dir":"","previous_headings":"","what":"Standard _pkgdown.yml Configuration","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"openwashdata packages must use following standard _pkgdown.yml configuration (replace packagename actual package name): Key elements: - URL must point correct GitHub repository - Bootstrap 5 theme required - Plausible analytics script header - Consistent sidebar structure funding acknowledgment - Standard author role display - Reference section data access function","code":"url: https://github.com/openwashdata/packagename template:   bootstrap: 5   includes:     in_header: |       <script defer data-domain=\"openwashdata.github.io\" src=\"https://plausible.io/js/script.js\"><\/script>  home:   links:     - icon: github       text: GitHub repository       href: https://github.com/openwashdata/packagename   sidebar:     structure: [links, citation, authors, dev, custom]     components:       custom:         title: Funding         text: This project was funded by the [Open Research Data Program of the ETH Board](https://ethrat.ch/en/eth-domain/open-research-data/).  authors:   footer:     roles: [cre, fnd]     text: \"Crafted by\"   sidebar:     roles: [cre, aut, ctb]     before: \"So *who* does the work?\"     after: \"Thanks all!\"  reference: - title: \"Data\"   desc: \"Access the packagename dataset\"   contents:   - packagename"},{"path":"https://github.com/openwashdata/postfloodintervention/CLAUDE.html","id":"code-style-guidelines","dir":"","previous_headings":"","what":"Code Style Guidelines","title":"CLAUDE.md - OpenWashData R Package Review Guide","text":"Use 2 spaces indentation (tabs) Maximum 80 characters per line Use tidyverse style R code (dplyr, tidyr, purrr) Use snake_case function variable names","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emmanuel Mhango. Author, maintainer. Evance. Contributor. Julius Kutaumbe. Contributor. Eramore. Contributor. Patrick Katholowamo. Contributor. Rashid Kumbu. Contributor. Mkangara. Contributor. Benja Moree. Contributor. Rober Gerald. Contributor. Olipa. Contributor. Laurent CT Levesque. Contributor. Shaun MacLeod. Contributor. Davie Selenje. Contributor. Mayamiko Jumbe. Contributor. Given Nyasulu. Contributor.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mhango E (????). “postfloodintervention: USAID Flood Response Post Intervention Survey Data.” doi:10.5281/zenodo.15837461.","code":"@Misc{mhango,   title = {postfloodintervention: USAID Flood Response Post Intervention Survey Data},   author = {Emmanuel Mhango},   doi = {10.5281/zenodo.15837461},   abstract = {Post-intervention monitoring data for rural water points in the Mulanje district of Malawi, collected as part of the USAID Flood Response program during 2019-2020. The dataset includes comprehensive water point assessments covering physical condition, operational performance, hydraulic measurements, water quality parameters, and microbiological quality assessments.},   version = {0.1.0}, }"},{"path":"https://github.com/openwashdata/postfloodintervention/index.html","id":"usaid-flood-response--post-intervention-survey-mulanje-20192020","dir":"","previous_headings":"","what":"USAID Flood Response Post Intervention Survey Data","title":"USAID Flood Response Post Intervention Survey Data","text":"dataset contains detailed post-intervention monitoring data rural water points Mulanje district Malawi, collected part USAID Flood Response program 2019 2020. Using mWater mobile data collection platform, enumerators conducted -site assessments water point conditions following flood recovery efforts. data captures comprehensive range water point characteristics, including physical condition photographs, operational performance pumps, hydraulic measurements time effort required pump standard volume water. Additionally, water quality parameters rigorously tested—covering chemical contaminants like arsenic, ammonia, fluoride, nitrate, free chlorine, total dissolved solids, well physical indicators pH, temperature, turbidity. Microbiological quality assessed via E. coli concentrations, including counts per 100 milliliters, confidence intervals, risk classifications, supported photographic documentation test results. indicators provide critical insight safety usability water sources flood-related disruptions.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/index.html","id":"use-cases","dir":"","previous_headings":"","what":"Use Cases","title":"USAID Flood Response Post Intervention Survey Data","text":"dataset serves multiple practical purposes water management public health: Evaluating effectiveness flood recovery interventions water infrastructure. Monitoring water quality trends identify ongoing emerging contamination risks. Informing maintenance rehabilitation priorities based pump performance structural assessments. Supporting public health risk assessments microbial contamination data. Providing evidence community-level decision making donor reporting. Guiding future emergency preparedness response planning water systems flood-prone areas.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/index.html","id":"potential-users","dir":"","previous_headings":"","what":"Potential Users","title":"USAID Flood Response Post Intervention Survey Data","text":"dataset highly valuable range stakeholders including: Government agencies responsible water supply sanitation, particularly district national levels. International donor organizations development partners managing WASH disaster recovery programs. Field engineers technical teams engaged infrastructure repair monitoring. Public health officials tracking waterborne disease risks. Researchers studying environmental health, water security, climate resilience. NGOs civil society organizations supporting community water management advocacy.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"USAID Flood Response Post Intervention Survey Data","text":"can install development version postfloodintervention GitHub : Alternatively, can download individual datasets CSV XLSX file table . Click Download CSV. window opens displays CSV browser. Right-click anywhere inside window select “Save Page …”. Save file folder choice.","code":"# install.packages(\"devtools\") devtools::install_github(\"openwashdata/postfloodintervention\") ## Run the following code in console if you don't have the packages ## install.packages(c(\"dplyr\", \"knitr\", \"readr\", \"stringr\", \"gt\", \"kableExtra\")) library(dplyr) library(knitr) library(readr) library(stringr) library(gt) library(kableExtra) library(postfloodintervention) data(postfloodintervention)"},{"path":"https://github.com/openwashdata/postfloodintervention/index.html","id":"data","dir":"","previous_headings":"","what":"Data","title":"USAID Flood Response Post Intervention Survey Data","text":"package provides access post-intervention monitoring data rural water points Mulanje district Malawi, collected part USAID Flood Response program 2019 2020.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/index.html","id":"postfloodintervention","dir":"","previous_headings":"Data","what":"postfloodintervention","title":"USAID Flood Response Post Intervention Survey Data","text":"dataset postfloodintervention contains 308 observations 30 variables overview variable names, see following table.","code":"postfloodintervention |>    head(3) |>    gt::gt() |>   gt::as_raw_html()"},{"path":"https://github.com/openwashdata/postfloodintervention/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"USAID Flood Response Post Intervention Survey Data","text":"","code":"## Run the following code in console if you don't have the packages ## install.packages(c(\"postfloodintervention\", \"tidyverse\")) library(postfloodintervention)  # Water Quality Parameters # Purpose: Multi-panel boxplots for chemical indicators (arsenic, fluoride, nitrate, ammonia, free chlorine, pH) to detect outliers or contamination patterns.  # Load libraries library(tidyverse)  # Select relevant chemical columns and pivot longer for plotting chemicals_long <- postfloodintervention %>%   select(arsenic_magnitude, fluoride_ppm, nitrate_mg_per_l, ammonia_mg_per_l, free_chlorine_mg_per_l, ph) %>%   pivot_longer(     cols = everything(),     names_to = \"chemical\",     values_to = \"value\"   ) %>%   filter(!is.na(value))  # Remove missing values  # Plot multi-panel boxplots ggplot(chemicals_long, aes(x = chemical, y = value)) +   geom_boxplot(fill = \"#4a90e2\", outlier.color = \"red\") +   facet_wrap(~ chemical, scales = \"free\") +   # Free y-scale per chemical   labs(     title = \"Water Quality Parameters: Chemical Indicators\",     x = NULL,     y = \"Concentration\"   ) +   theme_minimal() +   theme(axis.text.x = element_blank(),   # Hide x labels since facets show names         axis.ticks.x = element_blank())"},{"path":"https://github.com/openwashdata/postfloodintervention/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"USAID Flood Response Post Intervention Survey Data","text":"Data available CC-.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"USAID Flood Response Post Intervention Survey Data","text":"Please cite package using:","code":"citation(\"postfloodintervention\") #> To cite package 'postfloodintervention' in publications use: #>  #>   Mhango E (????). \"postfloodintervention: USAID Flood Response Post #>   Intervention Survey Data.\" doi:10.5281/zenodo.15837461 #>   <https://doi.org/10.5281/zenodo.15837461>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Misc{mhango, #>     title = {postfloodintervention: USAID Flood Response Post Intervention Survey Data}, #>     author = {Emmanuel Mhango}, #>     doi = {10.5281/zenodo.15837461}, #>     abstract = {Post-intervention monitoring data for rural water points in the Mulanje district of Malawi, collected as part of the USAID Flood Response program during 2019-2020. The dataset includes comprehensive water point assessments covering physical condition, operational performance, hydraulic measurements, water quality parameters, and microbiological quality assessments.}, #>     version = {0.1.0}, #>   }"},{"path":"https://github.com/openwashdata/postfloodintervention/reference/postfloodintervention.html","id":null,"dir":"Reference","previous_headings":"","what":"USAID Flood Response - Post Intervention Survey 2019-2020 — postfloodintervention","title":"USAID Flood Response - Post Intervention Survey 2019-2020 — postfloodintervention","text":"dataset represents USAID Flood Response Post Intervention Survey conducted Mulanje 2019-2020 using mWater platform. contains comprehensive water quality assessments operational data various water points affected flooding.","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/reference/postfloodintervention.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USAID Flood Response - Post Intervention Survey 2019-2020 — postfloodintervention","text":"tibble 308 rows 30 variables: submitted_on Date survey submitted water_point_name Name water point latitude Geographic latitude coordinate water point longitude Geographic longitude coordinate water point photo_condition_water_point File names URLs photos illustrating current condition water point operational_feel_of_pump Qualitative assessment pump feels operation time_to_pump_20_litres Time taken (seconds minutes) pump 20 liters water number_of_strokes_to_yield_water Number pump strokes needed produce water sediment_presence Presence absence sediment water electrical_conductivity_magnitude Measured magnitude electrical conductivity water sample electrical_conductivity_units Units electrical conductivity measurement (e.g., μS/cm) arsenic_magnitude Concentration arsenic detected water sample arsenic_units Units used measure arsenic concentration (e.g., μg/L) ammonia_mg_per_l Ammonia concentration mg per liter fluoride_ppm Fluoride concentration parts per million nitrate_mg_per_l Nitrate concentration mg per liter total_dissolved_solids_ppt Total dissolved solids parts per thousand free_chlorine_mg_per_l Concentration free chlorine mg per liter ph pH level water sample (acidity/alkalinity) temperature_magnitude Temperature value water sample temperature_units Units temperature measurement (degree celsius) turbidity_tube_magnitude Measured turbidity water using turbidity tube turbidity_tube_units Units turbidity measurement (e.g., NTU) comments Additional notes observations related water point sample type_of_sample Type source water sample (e.g., well, tap, river) date_of_sample Date water sample collected ecoli_mpn_per_100ml probable number (MPN) E. coli bacteria per 100 milliliters ecoli_upper_95ci_per_100ml Upper limit 95 percent confidence interval E. coli MPN per 100 ml ecoli_health_risk_category Health risk classification based E. coli levels (e.g., low, medium, high) ecoli_image File name URL image showing E. coli test result sample compartment color change","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/reference/postfloodintervention.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USAID Flood Response - Post Intervention Survey 2019-2020 — postfloodintervention","text":"https://www.mwater.co","code":""},{"path":"https://github.com/openwashdata/postfloodintervention/news/index.html","id":"postfloodintervention-010-2025-07-08","dir":"Changelog","previous_headings":"","what":"postfloodintervention 0.1.0 (2025-07-08)","title":"postfloodintervention 0.1.0 (2025-07-08)","text":"Initial release GitHub Added core data processing pipeline (#3) Enhanced documentation proper README function documentation (#4) Added CI/CD workflows R CMD check (#5) Fixed data quality issues including removal unusually low pH values (#5) Implemented standard openwashdata package structure Added CSV XLSX export formats inst/extdata/","code":""}]
